apply plugin: 'groovy'

ext {
    jobScriptDir = 'jobs'
}

sourceSets {
    jobs {
        groovy {
            srcDirs jobScriptDir
        }
    }
}

repositories {
    mavenCentral()
    jcenter()
    maven { url 'http://repo.jenkins-ci.org/releases/' }
}

dependencies {
    compile 'org.codehaus.groovy:groovy:2.1.3'
    compile 'org.jenkins-ci.plugins:job-dsl-core:1.38'
    testCompile('org.spockframework:spock-core:0.7-groovy-2.0') {
        exclude module: 'groovy-all'
    }

    // for the RestApiScriptRunner
    compile('ant:ant:1.7.0')
    compile('org.codehaus.groovy.modules.http-builder:http-builder:0.7.2') {
        exclude(module: 'groovy')
    }
}

task rest(dependsOn: 'classes', type: JavaExec) {
    main = 'com.dslexample.rest.RestApiScriptRunner'
    classpath = sourceSets.main.runtimeClasspath
    systemProperties System.getProperties()
}

file(jobScriptDir).eachFile { File targetScript ->
  task "createLocalXml-${targetScript.name}"(description: "create local copies of the Jenkins XML job file from jobs/${targetScript.name}",
      type: JavaExec, dependsOn: ['classes']) {
    main = 'javaposse.jobdsl.Run'
    classpath sourceSets.main.runtimeClasspath
    // You can uncomment this line and the output will go in the build directory but then example6Jobs.groovy will fail
    //workingDir buildDir
    args targetScript
  }
}

task createLocalXmlAll(dependsOn: ['build'],
  description: "Create local XML files for all scripts in $jobScriptDir") << {
  file(jobScriptDir).eachFile { File targetScript ->
    javaexec {
      main = 'javaposse.jobdsl.Run'
      classpath sourceSets.main.runtimeClasspath
      // You can uncomment this line and the output will go in the build directory but then example6Jobs.groovy will fail
      //workingDir buildDir
      args targetScript
    }
  }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}
